services:
  app:
    networks:
      - app-network
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    volumes:
      - ./target:/app/target # Monta o diretório target para o JAR
      - ./src/main/resources:/app/resources # Monta o diretório resources para o schema.sql
      - ./entrypoint.sh:/app/entrypoint.sh # Monta o entrypoint.sh
    depends_on:
      - db
      - cadvisor
      - prometheus
      - grafana
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/postgres #5432 é a porta no container que o java do container acessa
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: 12345

  db:
    networks:
      - app-network
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: 12345
      POSTGRES_DB: postgres
      LANG: en_US.UTF-8
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  pgadmin:
    networks:
      - app-network
    image: dpage/pgadmin4
    container_name: pg-admin
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@admin.com
      - PGADMIN_DEFAULT_PASSWORD=12345
    ports:
      - "16543:80"
    depends_on:
      - db

  cadvisor:
    networks:
      - app-network
    image: google/cadvisor:latest
    container_name: cadvisor
    ports:
      - "8080:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro

  prometheus:
    networks:
      - app-network
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    networks:
      - app-network
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana

volumes:
  postgres_data:
  grafana_data:

networks:
  app-network:
    driver: bridge